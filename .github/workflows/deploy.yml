name: Deploy to PythonAnywhere

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install deployment dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests paramiko
    
    - name: Deploy to PythonAnywhere
      env:
        PA_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ssh.pythonanywhere.com
      run: |
        # Create SSH key file
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Add host key
        ssh-keyscan -t rsa ssh.pythonanywhere.com >> ~/.ssh/known_hosts
        
        # Deploy via SSH (more reliable than API)
        echo "Deploying to PythonAnywhere via SSH..."
        ssh $PA_USERNAME@$SSH_HOST << 'EOF'
          cd ~/SocialAuth
          git pull origin main
          
          # Create directories if they don't exist
          mkdir -p ~/staticfiles
          mkdir -p ~/media
          chmod -R 755 ~/staticfiles
          chmod -R 755 ~/media
          
          # Activate virtual environment and install dependencies
          source ~/venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Run migrations
          python manage.py migrate
          
          # Collect static files
          python manage.py collectstatic --noinput
          
          # Reload web app via API
          curl -X POST \
            -H "Authorization: Token $PA_API_TOKEN" \
            https://www.pythonanywhere.com/api/v0/user/$PA_USERNAME/webapps/$PA_USERNAME.pythonanywhere.com/reload/
        EOF
        
        echo "Deployment completed!"
    
    - name: Verify deployment
      run: |
        echo "Verifying deployment..."
        sleep 10
        SITE_URL="https://${{ secrets.PYTHONANYWHERE_USERNAME }}.pythonanywhere.com"
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $SITE_URL)
        echo "Site status: $HTTP_STATUS"
        if [[ "$HTTP_STATUS" == "200" ]]; then
          echo "Deployment verified successfully!"
        else
          echo "Site may still be starting up. Check manually at $SITE_URL"
        fi