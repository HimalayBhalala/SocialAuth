version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: social_auth_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-social_auth_db}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_USER: ${DB_USER:-django_user}
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --sql-mode=TRADITIONAL
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=$$(cat /run/secrets/db_root_password)"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    secrets:
      - db_password
      - db_root_password
    networks:
      - social_auth_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: social_auth_backend
    restart: unless-stopped
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - DB_HOST=db
      - DB_PORT=3306
      - DB_ENGINE=django.db.backends.mysql
      - DB_NAME=${DB_NAME:-social_auth_db}
      - DB_USER=${DB_USER:-django_user}
      - DEBUG=${DEBUG:-False}
      # Other non-sensitive environment variables from .env
    secrets:
      - django_secret_key
      - db_password
    depends_on:
      db:
        condition: service_healthy
    networks:
      - social_auth_network
    # The entrypoint script will read secrets and set environment variables

  nginx:
    image: nginx:alpine
    container_name: social_auth_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - backend
    networks:
      - social_auth_network

volumes:
  mysql_data:
  static_volume:
  media_volume:

secrets:
  django_secret_key:
    file: ./secrets/django_secret_key.txt
  db_password:
    file: ./secrets/db_password.txt
  db_root_password:
    file: ./secrets/db_root_password.txt

networks:
  social_auth_network:
    driver: bridge